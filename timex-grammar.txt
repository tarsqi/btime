timex -> present { Now() } 
    | indef_past { IndefPast() }
	| indef_future { IndefFuture() }
	| indef_duration { Duration() }
    | timepoint
    | interval
    | mod
    | quant
    
timepoint -> date
    | time
    | day_of_week
    | month
    | month_and_day
    | year_and_week
    | quarter
    | anchored_time_point

present -> "now"
    | "right" "now"
    | "today"
    | "this" "time"
    | "current" "time"
    | "currently"
    | "the" "current" "time"
    | "present"
    | "presently"
    | "at" "present"
    | "present" "time"
    | "the" "present" "time"

time -> named_hour { Time(_[0]) }
    | hour ":" minute { Time(_[0], _[2]) }
    | minute r"past|after" hour { Time(_[2], _[0]) }
    | minute r"of|to|before|'?till" hour { Time(_[2]-1, 60-int(_[0])) }
    | small r"a.m.?" { Time(_[0]) }
    | small "in" "the" "morning" { Time(_[0]) }
    | small r"p.m.?" { Time(int(_[0]) + 12) }
    | small "in" "the" r"evening|afternoon" { Time(int(_[0]) + 12) }

hour -> named_hour
    | small { Hour(_[0]) }

named_hour -> small r"o'?clock" { Hour(_[0]) }
    | "noon" { Hour(12) }
    | "midnight" { Hour(0) }

minute -> small { Minute(_[0]) }
    | "quarter" { Minute(15) }
    | "half" { Minute(30) }

date -> day month year { CalendarDate(_[2], _[1], _[0]) }
    | month day year { CalendarDate(_[2], _[0], _[1]) }
    | MMDDYYyyToken() { mmddyyyy_to_date(_[0]) }

day -> small { DayOfMonth(_[0]) }
    | DayOfMonthToken() { DayOfMonth(_[0]) }

month -> Abbrev("january", 3) { Month(1) }
    | Abbrev("february", 3) { Month(2) }
    | Abbrev("march", 3) { Month(3) }
    | Abbrev("april", 3) { Month(4) }
    | WordNotPOS("may", "md") { Month(5) }
    | Abbrev("june", 3) { Month(6) }
    | Abbrev("july", 3) { Month(7) }
    | Abbrev("august", 3) { Month(8) }
    | Abbrev("september", 3) { Month(9) }
    | Abbrev("october", 3) { Month(10) }
    | Abbrev("november", 3) { Month(11) }
    | Abbrev("december", 3) { Month(12) }
    
quarter -> ordinal "quarter" { Quarter(_[0]) } 
    | "the" ordinal "quarter" { Quarter(_[1]) } 

month_and_day -> month day { Month(_[0]) | DayOfMonth(_[1]) }
    | month ordinal { Month(_[0]) | DayOfMonth(_[1]) }
    | day "of" month { Month(_[2]) | DayOfMonth(_[0])  }
    | ordinal "of" month { Month(_[2]) | DayOfMonth(_[0]) }
    | "the" ordinal "of" month { Month(_[3]) | DayOfMonth(_[1]) }
    | MMDDToken() { mmdd_to_date(_[0]) }
    
year -> cardinal | r"[0-9]{1,4}$" { Year(_[0]) }

year_and_week -> ordinal "week" "of" year { Year(_[3]) | Week(_[0]) }
    | "the" ordinal "week" "of" year { Year(_[4]) | Week(_[1]) }
    
year_and_day -> ordinal "day" "of" year { Year(_[3]) | Day(_[0]) }
    | "the" ordinal "day" "of" year { Year(_[4]) | Day(_[1]) }

day_of_week -> Abbrev("monday", 3) { DayOfWeek(1) }
    | Abbrev("tuesday", 3) { DayOfWeek(2) }
    | Abbrev("wednesday", 3) { DayOfWeek(3) }
    | Abbrev("thursday", 3) { DayOfWeek(4) }
    | Abbrev("friday", 3) { DayOfWeek(5) }
    | Abbrev("saturday", 3) { DayOfWeek(6) }
    | Abbrev("sunday", 3) { DayOfWeek(7) }

interval -> anchored_interval | duration

anchored_interval -> "past" duration { PastAnchoredInterval(_[1]) }
    | "last" duration { PastAnchoredInterval(_[1]) }
    | "next" duration { FutureAnchoredInterval(_[2]) }
    | "coming" duration { FutureAnchoredInterval(_[2]) }
    | "the" anchored_interval { _[1] }
    
anchored_time_point -> duration "ago" { PastAnchoredTimePoint(_[0]) }
    | duration "before" { PastAnchoredTimePoint(_[0]) }
    | duration "after" { FutureAnchoredTimePoint(_[0]) }
    | duration "since" { FutureAnchoredTimePoint(_[0]) }
    | duration "hence" { FutureAnchoredTimePoint(_[0]) }
    | duration "afterwards" { FutureAnchoredTimePoint(_[0]) }
    | duration "later" { FutureAnchoredTimePoint(_[0]) }

duration -> period { Duration() | _[0] }
    | bare_unit { Duration() | _[0] }
    | duration period { _[0] | _[1] }
    | duration "and" period { _[0] | _[2] }
    | duration "period"

period -> number r"seconds?" { Seconds(_[0]) }
    | number r"minutes?" { Minutes(_[0]) }
    | number "and" fraction r"minutes?" { Minutes(_[0]) | Seconds(60*_[2]) }
    | number r"hours?" { Hours(_[0]) }
    | number "and" fraction r"hours?" { Hours(_[0]) | Minutes(60*_[2]) }
    | number r"days?" { Days(_[0]) }
    | number "and" fraction r"days?" { Days(_[0]) | Hours(12*_[2]) }
    | number r"weeks?" { Weeks(_[0]) }
    | number r"months?" { Months(_[0]) }
    | number r"quarters?" { Quarters(_[0]) }
    | number r"years?" { Years(_[0]) }
    | number "and" fraction r"years?" { Years(_[0]) | Months(12*_[2]) }
    
bare_unit -> "second" { Seconds(1) }
    | "minute" { Minutes(1) }
    | "hour" { Hours(1) }
    | "day" { Days(1) }
    | "week" { Weeks(1) }
    | "month" { Months(1) }
    | "quarter" { Quarters(1) }
    | "year" { Years(1) }
    
number -> r"[0-9]+$" { int(_[0]) }
    | cardinal
    | number "and" fraction { _[0] + _[2] }

cardinal -> zero | small | hundreds | thousands
zero -> "0" { 0 }
    | r"(zero|oh?|n?[ao]ught)$" { 0 }
small -> r"[0-9]{1,2}$" { int(_[0]) }
    | ones
    | zero ones { _[1] }
    | teen
    | tens
    | tens ones { _[0] + _[1] }
ones -> "one" { 1 }
    | r"^an?$" { 1 }
    | "two" { 2 }
    | "three" { 3 }
    | "four" { 4 }
    | "five" { 5 }
    | "six" { 6 }
    | "seven" { 7 }
    | "eight" { 8 }
    | "nine" { 9 }
teen -> "ten" { 10 }
    | "eleven" { 11 }
    | "twelve" { 12 }
    | "thirteen" { 13 }
    | "fourteen" { 14 }
    | "fifteen" { 15 }
    | "sixteen" { 16 }
    | "seventeen" { 17 }
    | "eighteen" { 18 }
    | "nineteen" { 19 }
tens -> "twenty" { 20 }
    | "thirty" { 30 }
    | "forty" { 40 }
    | "fifty" { 50 }
    | "sixty" { 60 }
    | "seventy" { 70 }
    | "eighty" { 80 }
    | "ninety" { 90 }
hundreds -> small "hundred" { _[0] * 100 }
    | small "hundred" small { (_[0] * 100) + _[2] }
    | small "hundred" "and" small { (_[0] * 100) + _[3] }
thousands -> small small { _[0] * 100 + _[1] }
    | small "thousand" { _[0] * 1000 }
    | small "thousand" small { (_[0] * 1000) + _[2] }
    | small "thousand" "and" small { (_[0] * 1000) + _[3] }
    | small "thousand" hundreds { (_[0] * 1000) + _[2] }
    | hundreds "thousand" { _[0] * 1000 }
    | hundreds "thousand" small { (_[0] * 1000) + _[2] }
    | hundreds "thousand" "and" small { (_[0] * 1000) + _[3] }
    | hundreds "thousand" hundreds { (_[0] * 1000) + _[2] }

ordinal -> ord_ones | ord_small 
ord_small -> r"[0-9]+(st|nd|rd|th)" { int(_[0][:-2]) }
    | ord_ones
    | ord_teen
    | ord_tens
    | tens ord_ones { _[0] + _[1] }
ord_ones -> "first" { 1 }
    | "second" { 2 }
    | "third" { 3 }
    | "fourth" { 4 }
    | "fifth" { 5 }
    | "sixth" { 6 }
    | "seventh" { 7 }
    | "eighth" { 8 }
    | "ninth" { 9 }
ord_teen -> "tenth" { 10 }
    | "eleventh" { 11 }
    | "twelfth" { 12 }
    | "thirteenth" { 13 }
    | "fourteenth" { 14 }
    | "fifteenth" { 15 }
    | "sixteenth" { 16 }
    | "seventeenth" { 17 }
    | "eighteenth" { 18 }
    | "nineteenth" { 19 }
ord_tens -> "twentieth" { 20 }
    | "thirtieth" { 30 }
    | "fortieth" { 40 }
    | "fiftieth" { 50 }
    | "sixtieth" { 60 }
    | "seventieth" { 70 }
    | "eightieth" { 80 }
    | "ninetieth" { 90 }

mod -> approx timex { Mod("APPROX", _[1]) }
    | timex "or" "so" { Mod("APPROX", _[0]) }
    | equal_or_less timex { Mod("EQUAL_OR_LESS", _[1]) } 
    | timex "or" "less" { Mod("EQUAL_OR_LESS", _[0]) } 
    | equal_or_more timex { Mod("EQUAL_OR_MORE", _[1]) } 
    | timex "or" "more" { Mod("EQUAL_OR_MORE", _[0]) } 
    | less_than timex { Mod("LESS_THAN", _[1]) }
    | more_than timex { Mod("MORE_THAN", _[1]) }
    | start timex { Mod("START", _[1]) }
    | end timex { Mod("END", _[1]) } 

approx -> "a" "couple"
    | "a" "couple" "of"
    | "few" 
    | "a" "few"
    | "about"
    | "around"

equal_or_less -> "nearly"
    | "approaching"
    | "at" "most"
    | "up" "to"
    | "no" "more" "than"
    | "as" "much" "as"

equal_or_more -> "at" "least"
    | "no" "less" "than"
    | "as" "little" "as"

less_than -> "less" "than" 
    | "almost"

more_than -> "more" "than"
    | "over"

end -> "late"
    | "later"
    | "the" "late"
    | "the" "end" "of"
   
start -> "early"
    | "earlier"
    | "the" "early"
    | "the" "start" "of"
    | "the" "beginning" "of"

quant -> quantifier duration { Quant(_[0], _[1]) }
    | quantifier Any() duration { Quant(_[0], _[2]) }

quantifier -> "each" { _[0] }
    | "every" { _[0] }

freq -> "once" { 1 }
    | "twice" { 2 }
    | number "times" { _[0] }    

fraction -> "quarter" { Decimal("0.25") }
    | "half" { Decimal("0.5") }
    | "third" { 1/Decimal("3") }
    | "two" "thirds" { 2/Decimal("3") }
    | "three" "quarters" { Decimal("0.75") }
    | "a" fraction { _[1] }
    
some -> "some"
    | "many"
    
indef_past -> "recently"
    | adv "recently"
    | "a" "while" "ago"
    | r"^an?" adj_phrase "while" "ago"
    | r"^an?" adj_phrase "time" "ago"
    | dt adj_phrase "past"
    | dt "past"
    | "past"
    | "last" "time"
    | "the" "last" "time"

indef_future -> "soon"
    | dt Any() "future"
    | dt "future"
    | "next" "time"
    | dt "next" "time"
    
indef_duration -> dt "time"
    | "a" "while"
    | r"^an?" Any() "while"
    | dt "period"
    
adj_phrase -> adj
    | adj_phrase adj
    | adj adj_phrase
    | adv adj

adj -> "/jj"
adv -> "/rb"
    | "very"
    | "most"
    | "least"
    | "more"
    | "less"
dt -> "/dt"
modal -> "/md"